#,CVE ID,CWE ID,# of Exploits,Vulnerability Type(s),Publish Date,Update Date,Score,Gained Access Level,Access,Complexity,Authentication,Conf.,Integ.,Avail.
1,CVE-2019-14235,20,,,2019-08-02,2019-08-12,5.0,None,Remote,Low,Not required,None,None,Partial,An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.
2,CVE-2019-14234,89,,Sql,2019-08-09,2019-08-28,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of "OR 1=1" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.
3,CVE-2019-14233,20,,,2019-08-02,2019-08-12,5.0,None,Remote,Low,Not required,None,None,Partial,An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.
4,CVE-2019-14232,20,,,2019-08-02,2019-08-12,5.0,None,Remote,Low,Not required,None,None,Partial,An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.
5,CVE-2019-12781,20,,,2019-07-01,2019-07-12,5.0,None,Remote,Low,Not required,Partial,None,None,An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.
6,CVE-2019-12308,79,,XSS,2019-06-03,2019-06-12,4.3,None,Remote,Medium,Not required,None,Partial,None,An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.
7,CVE-2019-6975,400,,,2019-02-11,2019-07-06,5.0,None,Remote,Low,Not required,None,None,Partial,Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.
8,CVE-2019-3498,20,,,2019-01-09,2019-04-23,4.3,None,Remote,Medium,Not required,None,Partial,None,In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.
9,CVE-2018-16984,522,,Bypass,2018-10-02,2019-10-02,4.0,None,Remote,Low,Single system,Partial,None,None,An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the "view" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.
10,CVE-2018-14574,601,,,2018-08-03,2018-10-09,5.8,None,Remote,Medium,Not required,Partial,Partial,None,django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.
11,CVE-2018-7537,185,,,2018-03-09,2018-10-17,5.0,None,Remote,Low,Not required,None,None,Partial,An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.
12,CVE-2018-7536,185,,,2018-03-09,2019-01-17,5.0,None,Remote,Low,Not required,None,None,Partial,An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.
13,CVE-2018-6188,200,,+Info,2018-02-04,2018-03-15,5.0,None,Remote,Low,Not required,Partial,None,None,django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.
14,CVE-2017-12794,79,,XSS,2017-09-07,2018-03-15,4.3,None,Remote,Medium,Not required,None,Partial,None,In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with "DEBUG = True" (which makes this page accessible) in your production settings.
15,CVE-2017-7234,601,,,2017-04-04,2017-11-03,5.8,None,Remote,Medium,Not required,Partial,Partial,None,A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.
16,CVE-2017-7233,601,,XSS,2017-04-04,2018-10-17,5.8,None,Remote,Medium,Not required,Partial,Partial,None,Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an "on success" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs "safe" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.
17,CVE-2016-9014,264,,,2016-12-09,2017-11-03,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.
18,CVE-2016-9013,798,,,2016-12-09,2017-11-03,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.
19,CVE-2016-7401,254,,Bypass CSRF,2016-10-03,2018-01-04,5.0,None,Remote,Low,Not required,None,Partial,None,The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.
20,CVE-2016-6186,79,,XSS,2016-08-05,2018-10-09,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.
21,CVE-2016-2513,200,,+Info,2016-04-08,2017-09-07,2.6,None,Remote,High,Not required,Partial,None,None,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.
22,CVE-2016-2512,79,,XSS,2016-04-08,2017-09-07,4.3,None,Remote,Medium,Not required,None,Partial,None,The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.
23,CVE-2016-2048,284,,Bypass,2016-02-08,2016-11-28,6.0,None,Remote,Medium,Single system,Partial,Partial,Partial,Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the "Save as New" option when editing objects and leveraging the "change" permission.
24,CVE-2015-8213,200,,+Info,2015-12-07,2016-12-07,5.0,None,Remote,Low,Not required,Partial,None,None,The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.
25,CVE-2015-5964,399,,DoS,2015-08-24,2016-12-23,5.0,None,Remote,Low,Not required,None,None,Partial,The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.
26,CVE-2015-5963,399,,DoS,2015-08-24,2017-10-02,5.0,None,Remote,Low,Not required,None,None,Partial,contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.
27,CVE-2015-5145,399,,DoS,2015-07-14,2017-09-21,7.8,None,Remote,Low,Not required,None,None,Complete,validators.URLValidator in Django 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (CPU consumption) via unspecified vectors.
28,CVE-2015-5144,20,,Http R.Spl.,2015-07-14,2017-09-21,4.3,None,Remote,Medium,Not required,None,Partial,None,Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.
29,CVE-2015-5143,399,,DoS,2015-07-14,2017-09-21,7.8,None,Remote,Low,Not required,None,None,Complete,The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.
30,CVE-2015-3982,,,,2015-06-02,2016-12-05,5.0,None,Remote,Low,Not required,None,Partial,None,The session.flush function in the cached_db backend in Django 1.8.x before 1.8.2 does not properly flush the session, which allows remote attackers to hijack user sessions via an empty string in the session key.
31,CVE-2015-2317,79,,XSS,2015-03-25,2018-10-30,4.3,None,Remote,Medium,Not required,None,Partial,None,The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.
32,CVE-2015-2316,399,,DoS,2015-03-25,2018-10-30,5.0,None,Remote,Low,Not required,None,None,Partial,The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.
33,CVE-2015-2241,79,,XSS,2015-03-12,2016-12-02,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.
34,CVE-2015-0222,17,,DoS,2015-01-16,2016-12-21,5.0,None,Remote,Low,Not required,None,None,Partial,ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.
35,CVE-2015-0221,399,,DoS,2015-01-16,2016-12-21,5.0,None,Remote,Low,Not required,None,None,Partial,The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.
36,CVE-2015-0220,79,,XSS,2015-01-16,2016-12-21,4.3,None,Remote,Medium,Not required,None,Partial,None,The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a "\njavascript:" URL.
37,CVE-2015-0219,17,,,2015-01-16,2016-12-21,5.0,None,Remote,Low,Not required,None,Partial,None,Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.
38,CVE-2014-3730,20,,,2014-05-16,2018-10-30,4.3,None,Remote,Medium,Not required,None,Partial,None,The django.util.http.is_safe_url function in Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly validate URLs, which allows remote attackers to conduct open redirect attacks via a malformed URL, as demonstrated by "http:\\\djangoproject.com."
39,CVE-2014-1418,,,+Info,2014-05-16,2017-01-06,6.4,None,Remote,Low,Not required,Partial,Partial,None,Django 1.4 before 1.4.13, 1.5 before 1.5.8, 1.6 before 1.6.5, and 1.7 before 1.7b4 does not properly include the (1) Vary: Cookie or (2) Cache-Control header in responses, which allows remote attackers to obtain sensitive information or poison the cache via a request from certain browsers.
40,CVE-2014-0483,264,,+Info,2014-08-26,2018-10-30,3.5,None,Remote,Medium,Single system,Partial,None,None,The administrative interface (contrib.admin) in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not check if a field represents a relationship between models, which allows remote authenticated users to obtain sensitive information via a to_field parameter in a popup action to an admin change form page, as demonstrated by a /admin/auth/user/?pop=1&t=password URI.
41,CVE-2014-0482,287,,,2014-08-26,2018-10-30,6.0,None,Remote,Medium,Single system,Partial,Partial,Partial,The contrib.auth.middleware.RemoteUserMiddleware middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the contrib.auth.backends.RemoteUserBackend backend, allows remote authenticated users to hijack web sessions via vectors related to the REMOTE_USER header.
42,CVE-2014-0481,399,,DoS,2014-08-26,2018-10-30,4.3,None,Remote,Medium,Not required,None,None,Partial,The default configuration for the file upload handling system in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 uses a sequential file name generation process when a file with a conflicting name is uploaded, which allows remote attackers to cause a denial of service (CPU consumption) by unloading a multiple files with the same name.
43,CVE-2014-0480,20,,,2014-08-26,2018-10-30,5.8,None,Remote,Medium,Not required,Partial,Partial,None,The core.urlresolvers.reverse function in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3 does not properly validate URLs, which allows remote attackers to conduct phishing attacks via a // (slash slash) in a URL, which triggers a scheme-relative URL to be generated.
44,CVE-2014-0474,399,,,2014-04-23,2017-01-06,10.0,None,Remote,Low,Not required,Complete,Complete,Complete,The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to "MySQL typecasting."
45,CVE-2014-0473,264,,Bypass CSRF,2014-04-23,2017-01-06,5.0,None,Remote,Low,Not required,Partial,None,None,The caching framework in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 reuses a cached CSRF token for all anonymous users, which allows remote attackers to bypass CSRF protections by reading the CSRF cookie for anonymous users.
46,CVE-2014-0472,94,,,2014-04-23,2017-01-06,5.1,None,Remote,High,Not required,Partial,Partial,Partial,The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a "dotted Python path."
47,CVE-2013-6044,79,,XSS,2013-10-04,2017-11-16,4.3,None,Remote,Medium,Not required,None,Partial,None,The is_safe_url function in utils/http.py in Django 1.4.x before 1.4.6, 1.5.x before 1.5.2, and 1.6 before beta 2 treats a URL's scheme as safe even if it is not HTTP or HTTPS, which might introduce cross-site scripting (XSS) or other vulnerabilities into Django applications that use this function, as demonstrated by "the login view in django.contrib.auth.views" and the javascript: scheme.
48,CVE-2013-4315,22,,Dir. Trav.,2013-09-16,2013-12-10,5.0,None,Remote,Low,Not required,Partial,None,None,Directory traversal vulnerability in Django 1.4.x before 1.4.7, 1.5.x before 1.5.3, and 1.6.x before 1.6 beta 3 allows remote attackers to read arbitrary files via a file path in the ALLOWED_INCLUDE_ROOTS setting followed by a .. (dot dot) in a ssi template tag.
49,CVE-2013-4249,79,,XSS,2013-10-04,2017-08-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in the AdminURLFieldWidget widget in contrib/admin/widgets.py in Django 1.5.x before 1.5.2 and 1.6.x before 1.6 beta 2 allows remote attackers to inject arbitrary web script or HTML via a URLField.
50,CVE-2013-1443,287,,DoS,2013-09-23,2014-01-27,5.0,None,Remote,Low,Not required,None,None,Partial,The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.
